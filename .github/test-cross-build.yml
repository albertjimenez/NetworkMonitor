name: Cross-platform Rust Build and Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu     # Linux (Intel)
          - aarch64-unknown-linux-gnu     # Linux (ARM64)
          - x86_64-apple-darwin           # macOS (Intel)
          - aarch64-apple-darwin          # macOS (ARM64)
          - x86_64-pc-windows-gnu         # Windows (Intel)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Rust
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y musl-tools gcc-mingw-w64

      # Build and Test each Rust project
      - name: Build & Test Rust projects
        run: |
          cd db_replica
          cargo test --release --target ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}
          cd ../network-handler
          cargo test --release --target ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}
          cd ../system_monitor
          cargo test --release --target ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

      # Upload the Rust binaries
      - name: Upload Rust binaries for ${{ matrix.target }}
        uses: actions/upload-artifact@v2
        with:
          name: network-handler-${{ matrix.target }}-binaries
          path: target/${{ matrix.target }}/release/network-handler

  # Dashboard Test Job (npm)
  dashboard_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      # Install dependencies and run tests
      - name: Install dependencies and test dashboard
        run: |
          cd dashboard
          npm install
          npm run test

  # Publish artifacts only on main branch
  publish:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Upload release binaries
        uses: actions/upload-artifact@v5
        with:
          name: network-handler-binaries
          path: target/

