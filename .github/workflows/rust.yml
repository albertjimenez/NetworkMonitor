name: Rust

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu     # Linux (Intel)
#          - aarch64-unknown-linux-gnu     # Linux (ARM64)
          #- x86_64-apple-darwin           # macOS (Intel)
          #- aarch64-apple-darwin          # macOS (ARM64)
          #- x86_64-pc-windows-gnu         # Windows (Intel)
        rust_projects:
          - "network-handler"
          - "db_replica"
          - "system_monitor"
          - "common-data-model"
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      run: rustup update stable
    - name: Install cross-compilation tools
      uses: taiki-e/setup-cross-toolchain-action@v1
      with:
          target: ${{ matrix.target }}

    - name: Run tests
      run: |
        ls ${{ matrix.rust_projects }}
#        cargo test --verbose
  dashboard_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      # Install dependencies and run tests
      - name: Install dependencies and test dashboard
        run: |
          ls -lah
#          cd dashboard
#          npm install
#          npm run test
