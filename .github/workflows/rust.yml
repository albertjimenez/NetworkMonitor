name: Rust React Testing

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl     # Linux (Intel)
        rust_projects:
          - "network-handler"
          - "db_replica"
          - "system_monitor"
          - "common-data-model"
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust and dependencies for openssl
      run: |
        rustup update stable
        sudo apt install -y libssl-dev gcc musl-dev musl-tools
    - name: Install cross-compilation tools
      uses: taiki-e/setup-cross-toolchain-action@v1
      with:
          target: ${{ matrix.target }}

    - name: Run tests
      run: |
        cd ${{ matrix.rust_projects }}
        cargo test --verbose
      env:
        RUST_BACKTRACE: 1
  network-handler-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl     # Linux (Intel)
         # - aarch64-unknown-linux-musl     # Linux (ARM64)
        rust_projects:
          - "network-handler"
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust and dependencies for openssl
        run: |
          rustup update stable
          sudo apt install -y libssl-dev gcc musl-dev musl-tools
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}

  dashboard_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Install dependencies and run tests
      - name: Install dependencies and test dashboard
        run: |
          cd dashboard
          npm install
          npm run testCI
